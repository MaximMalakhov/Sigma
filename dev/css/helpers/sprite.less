/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@add-name: 'add';
@add-x: 0px;
@add-y: 0px;
@add-offset-x: 0px;
@add-offset-y: 0px;
@add-width: 33px;
@add-height: 26px;
@add-total-width: 61px;
@add-total-height: 41px;
@add-image: 'sprite.png';
@add: 0px 0px 0px 0px 33px 26px 61px 41px 'sprite.png' 'add';
@arrow-next-name: 'arrow-next';
@arrow-next-x: 33px;
@arrow-next-y: 0px;
@arrow-next-offset-x: -33px;
@arrow-next-offset-y: 0px;
@arrow-next-width: 14px;
@arrow-next-height: 26px;
@arrow-next-total-width: 61px;
@arrow-next-total-height: 41px;
@arrow-next-image: 'sprite.png';
@arrow-next: 33px 0px -33px 0px 14px 26px 61px 41px 'sprite.png' 'arrow-next';
@arrow-previous-name: 'arrow-previous';
@arrow-previous-x: 47px;
@arrow-previous-y: 0px;
@arrow-previous-offset-x: -47px;
@arrow-previous-offset-y: 0px;
@arrow-previous-width: 14px;
@arrow-previous-height: 26px;
@arrow-previous-total-width: 61px;
@arrow-previous-total-height: 41px;
@arrow-previous-image: 'sprite.png';
@arrow-previous: 47px 0px -47px 0px 14px 26px 61px 41px 'sprite.png' 'arrow-previous';
@search-white-name: 'search-white';
@search-white-x: 0px;
@search-white-y: 26px;
@search-white-offset-x: 0px;
@search-white-offset-y: -26px;
@search-white-width: 16px;
@search-white-height: 15px;
@search-white-total-width: 61px;
@search-white-total-height: 41px;
@search-white-image: 'sprite.png';
@search-white: 0px 26px 0px -26px 16px 15px 61px 41px 'sprite.png' 'search-white';
@search-name: 'search';
@search-x: 16px;
@search-y: 26px;
@search-offset-x: -16px;
@search-offset-y: -26px;
@search-width: 16px;
@search-height: 15px;
@search-total-width: 61px;
@search-total-height: 41px;
@search-image: 'sprite.png';
@search: 16px 26px -16px -26px 16px 15px 61px 41px 'sprite.png' 'search';
@spritesheet-width: 61px;
@spritesheet-height: 41px;
@spritesheet-image: 'sprite.png';
@spritesheet-sprites: @add @arrow-next @arrow-previous @search-white @search;
@spritesheet: 61px 41px 'sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
